using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.CompilerServices;
using System.Text.Json.Serialization;
using Supabase.Postgrest.Attributes;
using Supabase.Postgrest.Models;
using ColumnAttribute = System.ComponentModel.DataAnnotations.Schema.ColumnAttribute;
using TableAttribute = Supabase.Postgrest.Attributes.TableAttribute;

namespace Server.App.Models 
{

    /// <summary>
    /// Represents a comment in the system.
    /// This class maps to the "Comments" table in the database.
    /// </summary>
    /// <remarks>
    /// The <see cref="Comment"/> class is used to model comments, which can be associated with reviews or other comments (as replies).
    /// It inherits from <see cref="BaseModel"/> to provide common functionality for Supabase Postgrest models.
    /// </remarks>
    [Table("Comments")]
    public class Comment: BaseModel {

        /// <summary>
        /// Initializes a new instance of the <see cref="Comment"/> class.
        /// </summary>
        public Comment(){}

        /// <summary>
        /// Gets or sets the unique identifier for the comment.
        /// </summary>
        /// <remarks>
        /// This property is the primary key for the "Comments" table and is auto-generated by the database.
        /// </remarks>
        [PrimaryKey("Id",false)]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [JsonIgnore]
        public long Id { get; set; } 

        /// <summary>
        /// Gets or sets the content of the comment.
        /// </summary>
        [Column("CommentValue")]
        public string CommentValue { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier of the user who created the comment.
        /// </summary>
        [Column("UserId")]
        public long UserId { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier of the review associated with the comment.
        /// </summary>
        [Column("ReviewId")]
        public long ReviewId { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier of the parent comment if this comment is a reply.
        /// </summary>
        /// <remarks>
        /// If this comment is not a reply, the value is null.
        /// </remarks>
        [Column("ParentId")]
        public long? ParentId { get; set; }

        /// <summary>
        /// Gets or sets the date and time when the comment was created.
        /// </summary>
        [Column("CreatedAt")]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Gets or sets the number of likes the comment has received.
        /// </summary>
        [Column("Likes")]
        public int Likes { get; set; }

        /// <summary>
        /// Gets or sets the number of dislikes the comment has received.
        /// </summary>
        [Column("Dislikes")]
        public int Dislikes { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the comment has replies.
        /// </summary>
        [Column("HasReplies")]
        public bool HasReplies { get; set; }
    }
}